<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:Commons.Wpf.ControlLibrary"
                    xmlns:fa="http://schemas.fontawesome.io/icons/">

    <!--#region Buttons-->
    <Style TargetType="{x:Type local:ExitButton}">
        <Setter Property="Focusable" Value="False" />
        <Setter Property="Height" Value="25"/>
        <Setter Property="Width" Value="25"/>
        <Setter Property="FontSize" Value="20"/>
        <Setter Property="Foreground" Value="{DynamicResource AppGlobalIconButtonColor}"/>
        <Setter Property="fa:Awesome.Content" Value="Close"/>
        <Setter Property="FontFamily" Value="/Commons.Wpf.ControlLibrary;component/Resources/#FontAwesome"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="ToolTip" Value="Exit"/>
        <Setter Property="ToolTipService.InitialShowDelay" Value="500"/>
        <Setter Property="ToolTipService.ShowDuration" Value="10000"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="Border"  
                               CornerRadius="0"                            
                               Background="{TemplateBinding Background}">

                        <ContentPresenter Margin="2"
                                 HorizontalAlignment="Center"
                                 VerticalAlignment="Center"                                          
                                 RecognizesAccessKey="True"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="Border" Property="Opacity" Value="1" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="false">
                            <Setter TargetName="Border" Property="Opacity" Value=".7" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Foreground" Value="{DynamicResource AppGlobalIconPressedButtonColor}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type local:MinimizeButton}">
        <Setter Property="Focusable" Value="False" />
        <Setter Property="Height" Value="25"/>
        <Setter Property="Width" Value="25"/>
        <Setter Property="FontSize" Value="20"/>
        <Setter Property="Foreground" Value="{DynamicResource AppGlobalIconButtonColor}"/>
        <Setter Property="fa:Awesome.Content" Value="WindowMinimize"/>
        <Setter Property="FontFamily" Value="/Commons.Wpf.ControlLibrary;component/Resources/#FontAwesome"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="ToolTip" Value="Minimize"/>
        <Setter Property="ToolTipService.InitialShowDelay" Value="500"/>
        <Setter Property="ToolTipService.ShowDuration" Value="10000"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="Border"  
                            CornerRadius="0"
                            Background="{TemplateBinding Background}">

                        <ContentPresenter Margin="2"
                                 HorizontalAlignment="Center"
                                 VerticalAlignment="Center"
                                 RecognizesAccessKey="True"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="Border" Property="Opacity" Value="1" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="false">
                            <Setter TargetName="Border" Property="Opacity" Value=".7" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Foreground" Value="{DynamicResource AppGlobalIconPressedButtonColor}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type local:MaximizeButton}">
        <Setter Property="Focusable" Value="False" />
        <Setter Property="Height" Value="25"/>
        <Setter Property="Width" Value="25"/>
        <Setter Property="FontSize" Value="20"/>
        <Setter Property="Foreground" Value="{DynamicResource AppGlobalIconButtonColor}"/>
        <Setter Property="fa:Awesome.Content" Value="WindowMaximize"/>
        <Setter Property="FontFamily" Value="/Commons.Wpf.ControlLibrary;component/Resources/#FontAwesome"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="ToolTip" Value="Maximize"/>
        <Setter Property="ToolTipService.InitialShowDelay" Value="500"/>
        <Setter Property="ToolTipService.ShowDuration" Value="10000"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="Border"  
                            CornerRadius="0"
                            Background="{TemplateBinding Background}">

                        <ContentPresenter Margin="2"
                                 HorizontalAlignment="Center"
                                 VerticalAlignment="Center"
                                 RecognizesAccessKey="True"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="Border" Property="Opacity" Value="1" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="false">
                            <Setter TargetName="Border" Property="Opacity" Value=".7" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Foreground" Value="{DynamicResource AppGlobalIconPressedButtonColor}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type local:SettingsButton}">
        <Setter Property="Focusable" Value="False" />
        <Setter Property="Height" Value="25"/>
        <Setter Property="Width" Value="25"/>
        <Setter Property="FontSize" Value="20"/>
        <Setter Property="Foreground" Value="{DynamicResource AppGlobalIconButtonColor}"/>
        <Setter Property="fa:Awesome.Content" Value="Cog"/>
        <Setter Property="FontFamily" Value="/Commons.Wpf.ControlLibrary;component/Resources/#FontAwesome"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="Border"  
                               CornerRadius="0">

                        <ContentPresenter Margin="2"
                                 HorizontalAlignment="Center"
                                 VerticalAlignment="Center"
                                 RecognizesAccessKey="True"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="Border" Property="Opacity" Value="1" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="false">
                            <Setter TargetName="Border" Property="Opacity" Value=".7" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Foreground" Value="{DynamicResource AppGlobalIconPressedButtonColor}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type local:InfoButton}">
        <Setter Property="Focusable" Value="False" />
        <Setter Property="Height" Value="25"/>
        <Setter Property="Width" Value="25"/>
        <Setter Property="FontSize" Value="20"/>
        <Setter Property="Foreground" Value="{DynamicResource AppGlobalIconButtonColor}"/>
        <Setter Property="fa:Awesome.Content" Value="QuestionCircle"/>
        <Setter Property="FontFamily" Value="/Commons.Wpf.ControlLibrary;component/Resources/#FontAwesome"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="Border"  
                               CornerRadius="0">

                        <ContentPresenter Margin="2"
                                 HorizontalAlignment="Center"
                                 VerticalAlignment="Center"
                                 RecognizesAccessKey="True"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="Border" Property="Opacity" Value="1" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="false">
                            <Setter TargetName="Border" Property="Opacity" Value=".7" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Foreground" Value="{DynamicResource AppGlobalIconPressedButtonColor}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type local:ResetButton}">
        <Setter Property="Focusable" Value="False" />
        <Setter Property="Height" Value="25"/>
        <Setter Property="Width" Value="25"/>
        <Setter Property="FontSize" Value="20"/>
        <Setter Property="Foreground" Value="{DynamicResource AppGlobalIconButtonColor}"/>
        <Setter Property="fa:Awesome.Content" Value="Refresh"/>
        <Setter Property="FontFamily" Value="/Commons.Wpf.ControlLibrary;component/Resources/#FontAwesome"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="Border"  
                               CornerRadius="0">

                        <ContentPresenter Margin="2"
                                 HorizontalAlignment="Center"
                                 VerticalAlignment="Center"
                                 RecognizesAccessKey="True"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="Border" Property="Opacity" Value="1" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="false">
                            <Setter TargetName="Border" Property="Opacity" Value=".7" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Foreground" Value="{DynamicResource AppGlobalIconPressedButtonColor}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type local:AddButton}">
        <Setter Property="Focusable" Value="False" />
        <Setter Property="Height" Value="25"/>
        <Setter Property="Width" Value="25"/>
        <Setter Property="FontSize" Value="20"/>
        <Setter Property="Foreground" Value="{DynamicResource AppGlobalIconButtonColor}"/>
        <Setter Property="fa:Awesome.Content" Value="PlusCircle"/>
        <Setter Property="FontFamily" Value="/Commons.Wpf.ControlLibrary;component/Resources/#FontAwesome"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="Border"  
                               CornerRadius="0">

                        <ContentPresenter Margin="2"
                                 HorizontalAlignment="Center"
                                 VerticalAlignment="Center"
                                 RecognizesAccessKey="True"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="Border" Property="Opacity" Value="1" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="false">
                            <Setter TargetName="Border" Property="Opacity" Value=".7" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Foreground" Value="{DynamicResource AppGlobalIconPressedButtonColor}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type local:HomeButton}">
        <Setter Property="Focusable" Value="False" />
        <Setter Property="Height" Value="25"/>
        <Setter Property="Width" Value="25"/>
        <Setter Property="FontSize" Value="20"/>
        <Setter Property="Foreground" Value="{DynamicResource AppGlobalIconButtonColor}"/>
        <Setter Property="fa:Awesome.Content" Value="Home"/>
        <Setter Property="FontFamily" Value="/Commons.Wpf.ControlLibrary;component/Resources/#FontAwesome"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="ToolTip" Value="Home"/>
        <Setter Property="ToolTipService.InitialShowDelay" Value="500"/>
        <Setter Property="ToolTipService.ShowDuration" Value="10000"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="Border"  
                               CornerRadius="0">

                        <ContentPresenter Margin="2"
                                 HorizontalAlignment="Center"
                                 VerticalAlignment="Center"
                                 RecognizesAccessKey="True"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="Border" Property="Opacity" Value="1" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="false">
                            <Setter TargetName="Border" Property="Opacity" Value=".7" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Foreground" Value="{DynamicResource AppGlobalIconPressedButtonColor}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type local:CopyButton}">
        <Setter Property="Focusable" Value="False" />
        <Setter Property="Height" Value="25"/>
        <Setter Property="Width" Value="25"/>
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="Foreground" Value="{DynamicResource AppGlobalIconButtonColor}"/>
        <Setter Property="fa:Awesome.Content" Value="Clipboard"/>
        <Setter Property="FontFamily" Value="/Commons.Wpf.ControlLibrary;component/Resources/#FontAwesome"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="ToolTip" Value="Copy"/>
        <Setter Property="ToolTipService.InitialShowDelay" Value="500"/>
        <Setter Property="ToolTipService.ShowDuration" Value="10000"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="Border"  
                               CornerRadius="0">

                        <ContentPresenter Margin="2"
                                 HorizontalAlignment="Center"
                                 VerticalAlignment="Center"
                                 RecognizesAccessKey="True"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="Border" Property="Opacity" Value="1" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="false">
                            <Setter TargetName="Border" Property="Opacity" Value=".7" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Foreground" Value="{DynamicResource AppGlobalIconPressedButtonColor}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type local:FirstButton}">
        <Setter Property="Focusable" Value="False" />
        <Setter Property="Height" Value="25"/>
        <Setter Property="Width" Value="25"/>
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="Foreground" Value="{DynamicResource AppGlobalIconButtonColor}"/>
        <Setter Property="fa:Awesome.Content" Value="AngleDoubleLeft"/>
        <Setter Property="FontFamily" Value="/Commons.Wpf.ControlLibrary;component/Resources/#FontAwesome"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="ToolTip" Value="First"/>
        <Setter Property="ToolTipService.InitialShowDelay" Value="500"/>
        <Setter Property="ToolTipService.ShowDuration" Value="10000"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="Border"  
                               CornerRadius="0">

                        <ContentPresenter Margin="2"
                                 HorizontalAlignment="Center"
                                 VerticalAlignment="Center"
                                 RecognizesAccessKey="True"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="Border" Property="Opacity" Value="1" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="false">
                            <Setter TargetName="Border" Property="Opacity" Value=".7" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Foreground" Value="{DynamicResource AppGlobalIconPressedButtonColor}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type local:PreviousButton}">
        <Setter Property="Focusable" Value="False" />
        <Setter Property="Height" Value="25"/>
        <Setter Property="Width" Value="25"/>
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="Foreground" Value="{DynamicResource AppGlobalIconButtonColor}"/>
        <Setter Property="fa:Awesome.Content" Value="AngleLeft"/>
        <Setter Property="FontFamily" Value="/Commons.Wpf.ControlLibrary;component/Resources/#FontAwesome"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="ToolTip" Value="Previous"/>
        <Setter Property="ToolTipService.InitialShowDelay" Value="500"/>
        <Setter Property="ToolTipService.ShowDuration" Value="10000"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="Border"  
                               CornerRadius="0">

                        <ContentPresenter Margin="2"
                                 HorizontalAlignment="Center"
                                 VerticalAlignment="Center"
                                 RecognizesAccessKey="True"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="Border" Property="Opacity" Value="1" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="false">
                            <Setter TargetName="Border" Property="Opacity" Value=".7" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Foreground" Value="{DynamicResource AppGlobalIconPressedButtonColor}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type local:NextButton}">
        <Setter Property="Focusable" Value="False" />
        <Setter Property="Height" Value="25"/>
        <Setter Property="Width" Value="25"/>
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="Foreground" Value="{DynamicResource AppGlobalIconButtonColor}"/>
        <Setter Property="fa:Awesome.Content" Value="AngleRight"/>
        <Setter Property="FontFamily" Value="/Commons.Wpf.ControlLibrary;component/Resources/#FontAwesome"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="ToolTip" Value="Next"/>
        <Setter Property="ToolTipService.InitialShowDelay" Value="500"/>
        <Setter Property="ToolTipService.ShowDuration" Value="10000"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="Border"  
                               CornerRadius="0">

                        <ContentPresenter Margin="2"
                                 HorizontalAlignment="Center"
                                 VerticalAlignment="Center"
                                 RecognizesAccessKey="True"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="Border" Property="Opacity" Value="1" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="false">
                            <Setter TargetName="Border" Property="Opacity" Value=".7" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Foreground" Value="{DynamicResource AppGlobalIconPressedButtonColor}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type local:LastButton}">
        <Setter Property="Focusable" Value="False" />
        <Setter Property="Height" Value="25"/>
        <Setter Property="Width" Value="25"/>
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="Foreground" Value="{DynamicResource AppGlobalIconButtonColor}"/>
        <Setter Property="fa:Awesome.Content" Value="AngleDoubleRight"/>
        <Setter Property="FontFamily" Value="/Commons.Wpf.ControlLibrary;component/Resources/#FontAwesome"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="ToolTip" Value="Last"/>
        <Setter Property="ToolTipService.InitialShowDelay" Value="500"/>
        <Setter Property="ToolTipService.ShowDuration" Value="10000"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="Border"  
                               CornerRadius="0">

                        <ContentPresenter Margin="2"
                                 HorizontalAlignment="Center"
                                 VerticalAlignment="Center"
                                 RecognizesAccessKey="True"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="Border" Property="Opacity" Value="1" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="false">
                            <Setter TargetName="Border" Property="Opacity" Value=".7" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Foreground" Value="{DynamicResource AppGlobalIconPressedButtonColor}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type local:BackButton}">
        <Setter Property="Focusable" Value="False" />
        <Setter Property="Height" Value="25"/>
        <Setter Property="Width" Value="25"/>
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="Foreground" Value="{DynamicResource AppGlobalIconButtonColor}"/>
        <Setter Property="fa:Awesome.Content" Value="ArrowLeft"/>
        <Setter Property="FontFamily" Value="/Commons.Wpf.ControlLibrary;component/Resources/#FontAwesome"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="ToolTip" Value="Go Back"/>
        <Setter Property="ToolTipService.InitialShowDelay" Value="500"/>
        <Setter Property="ToolTipService.ShowDuration" Value="10000"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="Border"  
                               CornerRadius="0">

                        <ContentPresenter Margin="2"
                                 HorizontalAlignment="Center"
                                 VerticalAlignment="Center"
                                 RecognizesAccessKey="True"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="Border" Property="Opacity" Value="1" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="false">
                            <Setter TargetName="Border" Property="Opacity" Value=".7" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Foreground" Value="{DynamicResource AppGlobalIconPressedButtonColor}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type local:AddSearchButton}">
        <Setter Property="Focusable" Value="False" />
        <Setter Property="Height" Value="25"/>
        <Setter Property="Width" Value="25"/>
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="Foreground" Value="{DynamicResource AppGlobalIconButtonColor}"/>
        <Setter Property="fa:Awesome.Content" Value="SearchPlus"/>
        <Setter Property="FontFamily" Value="/Commons.Wpf.ControlLibrary;component/Resources/#FontAwesome"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="ToolTip" Value="Add to search"/>
        <Setter Property="ToolTipService.InitialShowDelay" Value="500"/>
        <Setter Property="ToolTipService.ShowDuration" Value="10000"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="Border"  
                               CornerRadius="0">

                        <ContentPresenter Margin="2"
                                 HorizontalAlignment="Center"
                                 VerticalAlignment="Center"
                                 RecognizesAccessKey="True"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource ButtonDisabledBackgroundColor}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="Border" Property="Opacity" Value="1" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="false">
                            <Setter TargetName="Border" Property="Opacity" Value=".7" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Foreground" Value="{DynamicResource AppGlobalIconPressedButtonColor}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type local:RemoveButton}">
        <Setter Property="Focusable" Value="False" />
        <Setter Property="Height" Value="25"/>
        <Setter Property="Width" Value="25"/>
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="Foreground" Value="{DynamicResource AppGlobalIconButtonColor}"/>
        <Setter Property="fa:Awesome.Content" Value="TimesCircle"/>
        <Setter Property="FontFamily" Value="/Commons.Wpf.ControlLibrary;component/Resources/#FontAwesome"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="ToolTip" Value="Remove"/>
        <Setter Property="ToolTipService.InitialShowDelay" Value="500"/>
        <Setter Property="ToolTipService.ShowDuration" Value="10000"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="Border"  
                               CornerRadius="0">

                        <ContentPresenter Margin="2"
                                 HorizontalAlignment="Center"
                                 VerticalAlignment="Center"
                                 RecognizesAccessKey="True"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="Border" Property="Opacity" Value="1" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="false">
                            <Setter TargetName="Border" Property="Opacity" Value=".7" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Foreground" Value="{DynamicResource AppGlobalIconPressedButtonColor}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type local:FeedbackButton}">
        <Setter Property="Focusable" Value="False" />
        <Setter Property="Height" Value="25"/>
        <Setter Property="Width" Value="25"/>
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="Foreground" Value="{DynamicResource AppGlobalIconButtonColor}"/>
        <Setter Property="fa:Awesome.Content" Value="Commenting"/>
        <Setter Property="FontFamily" Value="/Commons.Wpf.ControlLibrary;component/Resources/#FontAwesome"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="ToolTip" Value="Feedback"/>
        <Setter Property="ToolTipService.InitialShowDelay" Value="500"/>
        <Setter Property="ToolTipService.ShowDuration" Value="10000"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="Border"  
                               CornerRadius="0">

                        <ContentPresenter Margin="2"
                                 HorizontalAlignment="Center"
                                 VerticalAlignment="Center"
                                 RecognizesAccessKey="True"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="Border" Property="Opacity" Value="1" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="false">
                            <Setter TargetName="Border" Property="Opacity" Value=".7" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Foreground" Value="{DynamicResource AppGlobalIconPressedButtonColor}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type local:RefreshButton}">
        <Setter Property="Focusable" Value="False" />
        <Setter Property="Height" Value="25"/>
        <Setter Property="Width" Value="25"/>
        <Setter Property="FontSize" Value="20"/>
        <Setter Property="Foreground" Value="{DynamicResource AppGlobalIconButtonColor}"/>
        <Setter Property="fa:Awesome.Content" Value="Refresh"/>
        <Setter Property="FontFamily" Value="/Commons.Wpf.ControlLibrary;component/Resources/#FontAwesome"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="Border"  
                               CornerRadius="0">

                        <ContentPresenter Margin="2"
                                 HorizontalAlignment="Center"
                                 VerticalAlignment="Center"
                                 RecognizesAccessKey="True"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="Border" Property="Opacity" Value="1" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="false">
                            <Setter TargetName="Border" Property="Opacity" Value=".7" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Foreground" Value="{DynamicResource AppGlobalIconPressedButtonColor}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style TargetType="{x:Type local:EyeButton}">
        <Setter Property="Focusable" Value="False" />
        <Setter Property="Height" Value="25"/>
        <Setter Property="Width" Value="25"/>
        <Setter Property="FontSize" Value="20"/>
        <Setter Property="Foreground" Value="{DynamicResource AppGlobalIconButtonColor}"/>
        <Setter Property="fa:Awesome.Content" Value="Eye"/>
        <Setter Property="FontFamily" Value="/Commons.Wpf.ControlLibrary;component/Resources/#FontAwesome"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="ToolTipService.InitialShowDelay" Value="500"/>
        <Setter Property="ToolTipService.ShowDuration" Value="10000"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="Border"  
                               CornerRadius="0">

                        <ContentPresenter Margin="2"
                                 HorizontalAlignment="Center"
                                 VerticalAlignment="Center"
                                 RecognizesAccessKey="True"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="Border" Property="Opacity" Value="1" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="false">
                            <Setter TargetName="Border" Property="Opacity" Value=".7" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Foreground" Value="{DynamicResource AppGlobalIconPressedButtonColor}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion-->

    <!--#region Labels-->
    <Style TargetType="{x:Type local:DownArrowIcon}">
        <Setter Property="Focusable" Value="False" />
        <Setter Property="Height" Value="25"/>
        <Setter Property="Width" Value="25"/>
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="Foreground" Value="{DynamicResource AppGlobalAlertIconColor}"/>
        <Setter Property="fa:Awesome.Content" Value="ArrowDown"/>
        <Setter Property="FontFamily" Value="/Commons.Wpf.ControlLibrary;component/Resources/#FontAwesome"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Label}">
                    <Border x:Name="Border"  
                               CornerRadius="0">

                        <ContentPresenter Margin="2"
                                 HorizontalAlignment="Center"
                                 VerticalAlignment="Center"
                                 RecognizesAccessKey="True"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type local:InfoIcon}">
        <Setter Property="Focusable" Value="False" />
        <Setter Property="Height" Value="25"/>
        <Setter Property="Width" Value="25"/>
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="Foreground" Value="{DynamicResource AppGlobalIconButtonColor}"/>
        <Setter Property="fa:Awesome.Content" Value="InfoCircle"/>
        <Setter Property="FontFamily" Value="/Commons.Wpf.ControlLibrary;component/Resources/#FontAwesome"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Label}">
                    <Border x:Name="Border"  
                               CornerRadius="0">

                        <ContentPresenter Margin="2"
                                 HorizontalAlignment="Center"
                                 VerticalAlignment="Center"
                                 RecognizesAccessKey="True"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!--#endregion-->
    
</ResourceDictionary>
